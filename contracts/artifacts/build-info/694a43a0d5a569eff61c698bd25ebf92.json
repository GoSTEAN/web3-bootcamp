{
	"id": "694a43a0d5a569eff61c698bd25ebf92",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Counter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.24;\n\n/// @title A simple counter contract\n/// @notice This contract allows incrementing, decrementing, and setting a counter value.\n/// @dev This is a basic example of a counter with increment and decrement functionality.\ncontract Counter {\n    /// @notice The current count value\n    uint8 private count = 0;\n\n    /// @notice Returns the current count value\n    /// @dev The function is marked as view, meaning it does not modify the state.\n    /// @return The current count as an unsigned 8-bit integer\n    function getCount() public view returns (uint8) {\n        return count;\n    }\n\n    /// @notice Increments the count by 1\n    /// @dev This function increases the count state variable by 1.\n    function increment() public {\n        count++;\n    }\n\n    /// @notice Decrements the count by 1\n    /// @dev This function decreases the count state variable by 1.\n    function decrement() public {\n        require(count > 0, \"You can't decrease again!\");\n        count--;\n    }\n\n    /// @notice Sets the count to a specific value\n    /// @param _count The new value for the count\n    /// @dev The input parameter _count allows setting the count directly.\n    function setCount(uint8 _count) public {\n        count = _count;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Counter.sol": {
				"Counter": {
					"abi": [
						{
							"inputs": [],
							"name": "decrement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCount",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_count",
									"type": "uint8"
								}
							],
							"name": "setCount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is a basic example of a counter with increment and decrement functionality.",
						"kind": "dev",
						"methods": {
							"decrement()": {
								"details": "This function decreases the count state variable by 1."
							},
							"getCount()": {
								"details": "The function is marked as view, meaning it does not modify the state.",
								"returns": {
									"_0": "The current count as an unsigned 8-bit integer"
								}
							},
							"increment()": {
								"details": "This function increases the count state variable by 1."
							},
							"setCount(uint8)": {
								"details": "The input parameter _count allows setting the count directly.",
								"params": {
									"_count": "The new value for the count"
								}
							}
						},
						"title": "A simple counter contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Counter.sol\":274:1285  contract Counter {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Counter.sol\":359:360  0 */\n  0x00\n    /* \"contracts/Counter.sol\":337:360  uint8 private count = 0 */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Counter.sol\":274:1285  contract Counter {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Counter.sol\":274:1285  contract Counter {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2baeceb7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa87d942c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb389da76\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Counter.sol\":922:1031  function decrement() public {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Counter.sol\":561:638  function getCount() public view returns (uint8) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":1213:1283  function setCount(uint8 _count) public {... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/Counter.sol\":754:806  function increment() public {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Counter.sol\":922:1031  function decrement() public {... */\n    tag_8:\n        /* \"contracts/Counter.sol\":976:977  0 */\n      0x00\n        /* \"contracts/Counter.sol\":968:973  count */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Counter.sol\":968:977  count > 0 */\n      0xff\n      and\n      gt\n        /* \"contracts/Counter.sol\":960:1007  require(count > 0, \"You can't decrease again!\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/Counter.sol\":1017:1022  count */\n      0x00\n      dup1\n        /* \"contracts/Counter.sol\":1017:1024  count-- */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Counter.sol\":922:1031  function decrement() public {... */\n      jump\t// out\n        /* \"contracts/Counter.sol\":561:638  function getCount() public view returns (uint8) {... */\n    tag_10:\n        /* \"contracts/Counter.sol\":602:607  uint8 */\n      0x00\n        /* \"contracts/Counter.sol\":626:631  count */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Counter.sol\":619:631  return count */\n      swap1\n      pop\n        /* \"contracts/Counter.sol\":561:638  function getCount() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Counter.sol\":1213:1283  function setCount(uint8 _count) public {... */\n    tag_16:\n        /* \"contracts/Counter.sol\":1270:1276  _count */\n      dup1\n        /* \"contracts/Counter.sol\":1262:1267  count */\n      0x00\n      dup1\n        /* \"contracts/Counter.sol\":1262:1276  count = _count */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":1213:1283  function setCount(uint8 _count) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Counter.sol\":754:806  function increment() public {... */\n    tag_18:\n        /* \"contracts/Counter.sol\":792:797  count */\n      0x00\n      dup1\n        /* \"contracts/Counter.sol\":792:799  count++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Counter.sol\":754:806  function increment() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:93   */\n    tag_30:\n        /* \"#utility.yul\":42:49   */\n      0x00\n        /* \"#utility.yul\":82:86   */\n      0xff\n        /* \"#utility.yul\":75:80   */\n      dup3\n        /* \"#utility.yul\":71:87   */\n      and\n        /* \"#utility.yul\":60:87   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:93   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":99:211   */\n    tag_31:\n        /* \"#utility.yul\":182:204   */\n      tag_44\n        /* \"#utility.yul\":198:203   */\n      dup2\n        /* \"#utility.yul\":182:204   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":177:180   */\n      dup3\n        /* \"#utility.yul\":170:205   */\n      mstore\n        /* \"#utility.yul\":99:211   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":217:431   */\n    tag_12:\n        /* \"#utility.yul\":306:310   */\n      0x00\n        /* \"#utility.yul\":344:346   */\n      0x20\n        /* \"#utility.yul\":333:342   */\n      dup3\n        /* \"#utility.yul\":329:347   */\n      add\n        /* \"#utility.yul\":321:347   */\n      swap1\n      pop\n        /* \"#utility.yul\":357:424   */\n      tag_46\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":406:423   */\n      add\n        /* \"#utility.yul\":397:403   */\n      dup5\n        /* \"#utility.yul\":357:424   */\n      tag_31\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":217:431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":518:635   */\n    tag_33:\n        /* \"#utility.yul\":627:628   */\n      0x00\n        /* \"#utility.yul\":624:625   */\n      dup1\n        /* \"#utility.yul\":617:629   */\n      revert\n        /* \"#utility.yul\":764:882   */\n    tag_35:\n        /* \"#utility.yul\":835:857   */\n      tag_51\n        /* \"#utility.yul\":851:856   */\n      dup2\n        /* \"#utility.yul\":835:857   */\n      tag_30\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":828:833   */\n      dup2\n        /* \"#utility.yul\":825:858   */\n      eq\n        /* \"#utility.yul\":815:876   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":872:873   */\n      0x00\n        /* \"#utility.yul\":869:870   */\n      dup1\n        /* \"#utility.yul\":862:874   */\n      revert\n        /* \"#utility.yul\":815:876   */\n    tag_52:\n        /* \"#utility.yul\":764:882   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":888:1023   */\n    tag_36:\n        /* \"#utility.yul\":932:937   */\n      0x00\n        /* \"#utility.yul\":970:976   */\n      dup2\n        /* \"#utility.yul\":957:977   */\n      calldataload\n        /* \"#utility.yul\":948:977   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:1017   */\n      tag_54\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":986:1017   */\n      tag_35\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":888:1023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1029:1354   */\n    tag_15:\n        /* \"#utility.yul\":1086:1092   */\n      0x00\n        /* \"#utility.yul\":1135:1137   */\n      0x20\n        /* \"#utility.yul\":1123:1132   */\n      dup3\n        /* \"#utility.yul\":1114:1121   */\n      dup5\n        /* \"#utility.yul\":1110:1133   */\n      sub\n        /* \"#utility.yul\":1106:1138   */\n      slt\n        /* \"#utility.yul\":1103:1222   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1141:1220   */\n      tag_57\n      tag_33\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1103:1222   */\n    tag_56:\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1286:1337   */\n      tag_58\n        /* \"#utility.yul\":1329:1336   */\n      dup5\n        /* \"#utility.yul\":1320:1326   */\n      dup3\n        /* \"#utility.yul\":1309:1318   */\n      dup6\n        /* \"#utility.yul\":1305:1327   */\n      add\n        /* \"#utility.yul\":1286:1337   */\n      tag_36\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1276:1337   */\n      swap2\n      pop\n        /* \"#utility.yul\":1232:1347   */\n      pop\n        /* \"#utility.yul\":1029:1354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1360:1529   */\n    tag_37:\n        /* \"#utility.yul\":1444:1455   */\n      0x00\n        /* \"#utility.yul\":1478:1484   */\n      dup3\n        /* \"#utility.yul\":1473:1476   */\n      dup3\n        /* \"#utility.yul\":1466:1485   */\n      mstore\n        /* \"#utility.yul\":1518:1522   */\n      0x20\n        /* \"#utility.yul\":1513:1516   */\n      dup3\n        /* \"#utility.yul\":1509:1523   */\n      add\n        /* \"#utility.yul\":1494:1523   */\n      swap1\n      pop\n        /* \"#utility.yul\":1360:1529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1535:1710   */\n    tag_38:\n        /* \"#utility.yul\":1675:1702   */\n      0x596f752063616e277420646563726561736520616761696e2100000000000000\n        /* \"#utility.yul\":1671:1672   */\n      0x00\n        /* \"#utility.yul\":1663:1669   */\n      dup3\n        /* \"#utility.yul\":1659:1673   */\n      add\n        /* \"#utility.yul\":1652:1703   */\n      mstore\n        /* \"#utility.yul\":1535:1710   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:2082   */\n    tag_39:\n        /* \"#utility.yul\":1858:1861   */\n      0x00\n        /* \"#utility.yul\":1879:1946   */\n      tag_62\n        /* \"#utility.yul\":1943:1945   */\n      0x19\n        /* \"#utility.yul\":1938:1941   */\n      dup4\n        /* \"#utility.yul\":1879:1946   */\n      tag_37\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1872:1946   */\n      swap2\n      pop\n        /* \"#utility.yul\":1955:2048   */\n      tag_63\n        /* \"#utility.yul\":2044:2047   */\n      dup3\n        /* \"#utility.yul\":1955:2048   */\n      tag_38\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2073:2075   */\n      0x20\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2064:2076   */\n      add\n        /* \"#utility.yul\":2057:2076   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:2082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2088:2507   */\n    tag_22:\n        /* \"#utility.yul\":2254:2258   */\n      0x00\n        /* \"#utility.yul\":2292:2294   */\n      0x20\n        /* \"#utility.yul\":2281:2290   */\n      dup3\n        /* \"#utility.yul\":2277:2295   */\n      add\n        /* \"#utility.yul\":2269:2295   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2350   */\n      dup2\n        /* \"#utility.yul\":2335:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2351   */\n      sub\n        /* \"#utility.yul\":2327:2328   */\n      0x00\n        /* \"#utility.yul\":2316:2325   */\n      dup4\n        /* \"#utility.yul\":2312:2329   */\n      add\n        /* \"#utility.yul\":2305:2352   */\n      mstore\n        /* \"#utility.yul\":2369:2500   */\n      tag_65\n        /* \"#utility.yul\":2495:2499   */\n      dup2\n        /* \"#utility.yul\":2369:2500   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2361:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2088:2507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2513:2693   */\n    tag_40:\n        /* \"#utility.yul\":2561:2638   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2558:2559   */\n      0x00\n        /* \"#utility.yul\":2551:2639   */\n      mstore\n        /* \"#utility.yul\":2658:2662   */\n      0x11\n        /* \"#utility.yul\":2655:2656   */\n      0x04\n        /* \"#utility.yul\":2648:2663   */\n      mstore\n        /* \"#utility.yul\":2682:2686   */\n      0x24\n        /* \"#utility.yul\":2679:2680   */\n      0x00\n        /* \"#utility.yul\":2672:2687   */\n      revert\n        /* \"#utility.yul\":2699:2866   */\n    tag_24:\n        /* \"#utility.yul\":2736:2739   */\n      0x00\n        /* \"#utility.yul\":2759:2781   */\n      tag_68\n        /* \"#utility.yul\":2775:2780   */\n      dup3\n        /* \"#utility.yul\":2759:2781   */\n      tag_30\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2750:2781   */\n      swap2\n      pop\n        /* \"#utility.yul\":2803:2807   */\n      0x00\n        /* \"#utility.yul\":2796:2801   */\n      dup3\n        /* \"#utility.yul\":2793:2808   */\n      sub\n        /* \"#utility.yul\":2790:2831   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2811:2829   */\n      tag_70\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2790:2831   */\n    tag_69:\n        /* \"#utility.yul\":2858:2859   */\n      0x01\n        /* \"#utility.yul\":2851:2856   */\n      dup3\n        /* \"#utility.yul\":2847:2860   */\n      sub\n        /* \"#utility.yul\":2840:2860   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:2866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2872:3039   */\n    tag_29:\n        /* \"#utility.yul\":2909:2912   */\n      0x00\n        /* \"#utility.yul\":2932:2954   */\n      tag_72\n        /* \"#utility.yul\":2948:2953   */\n      dup3\n        /* \"#utility.yul\":2932:2954   */\n      tag_30\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2923:2954   */\n      swap2\n      pop\n        /* \"#utility.yul\":2976:2980   */\n      0xff\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2966:2981   */\n      sub\n        /* \"#utility.yul\":2963:3004   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2984:3002   */\n      tag_74\n      tag_40\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2963:3004   */\n    tag_73:\n        /* \"#utility.yul\":3031:3032   */\n      0x01\n        /* \"#utility.yul\":3024:3029   */\n      dup3\n        /* \"#utility.yul\":3020:3033   */\n      add\n        /* \"#utility.yul\":3013:3033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:3039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fbaa80ec5f6de652b958a82be366ca088f786b3964f0567c54391bb81b75225764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040525f805f6101000a81548160ff021916908360ff160217905550348015610028575f80fd5b50610345806100365f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632baeceb71461004e578063a87d942c14610058578063b389da7614610076578063d09de08a14610092575b5f80fd5b61005661009c565b005b610060610126565b60405161006d91906101a9565b60405180910390f35b610090600480360381019061008b91906101f0565b61013a565b005b61009a610156565b005b5f805f9054906101000a900460ff1660ff16116100ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e590610275565b60405180910390fd5b5f8081819054906101000a900460ff168092919061010b906102c0565b91906101000a81548160ff021916908360ff16021790555050565b5f805f9054906101000a900460ff16905090565b805f806101000a81548160ff021916908360ff16021790555050565b5f8081819054906101000a900460ff1680929190610173906102e7565b91906101000a81548160ff021916908360ff16021790555050565b5f60ff82169050919050565b6101a38161018e565b82525050565b5f6020820190506101bc5f83018461019a565b92915050565b5f80fd5b6101cf8161018e565b81146101d9575f80fd5b50565b5f813590506101ea816101c6565b92915050565b5f60208284031215610205576102046101c2565b5b5f610212848285016101dc565b91505092915050565b5f82825260208201905092915050565b7f596f752063616e277420646563726561736520616761696e21000000000000005f82015250565b5f61025f60198361021b565b915061026a8261022b565b602082019050919050565b5f6020820190508181035f83015261028c81610253565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102ca8261018e565b91505f82036102dc576102db610293565b5b600182039050919050565b5f6102f18261018e565b915060ff820361030457610303610293565b5b60018201905091905056fea2646970667358221220fbaa80ec5f6de652b958a82be366ca088f786b3964f0567c54391bb81b75225764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 DUP1 PUSH2 0x36 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xB389DA76 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x92 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x156 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND GT PUSH2 0xEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5 SWAP1 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10B SWAP1 PUSH2 0x2C0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x173 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x18E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BC PUSH0 DUP4 ADD DUP5 PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CF DUP2 PUSH2 0x18E JUMP JUMPDEST DUP2 EQ PUSH2 0x1D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA DUP2 PUSH2 0x1C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x205 JUMPI PUSH2 0x204 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x212 DUP5 DUP3 DUP6 ADD PUSH2 0x1DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E277420646563726561736520616761696E2100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F PUSH1 0x19 DUP4 PUSH2 0x21B JUMP JUMPDEST SWAP2 POP PUSH2 0x26A DUP3 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28C DUP2 PUSH2 0x253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CA DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x293 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x304 JUMPI PUSH2 0x303 PUSH2 0x293 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xAA DUP1 0xEC PUSH0 PUSH14 0xE652B958A82BE366CA088F786B39 PUSH5 0xF0567C5439 SHL 0xB8 SHL PUSH22 0x225764736F6C63430008180033000000000000000000 ",
							"sourceMap": "274:1011:0:-:0;;;359:1;337:23;;;;;;;;;;;;;;;;;;;;274:1011;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@decrement_38": {
									"entryPoint": 156,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCount_15": {
									"entryPoint": 294,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_23": {
									"entryPoint": 342,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCount_49": {
									"entryPoint": 314,
									"id": 49,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint8": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint8": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3042:1",
										"nodeType": "YulBlock",
										"src": "0:3042:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "50:43:1",
													"nodeType": "YulBlock",
													"src": "50:43:1",
													"statements": [
														{
															"nativeSrc": "60:27:1",
															"nodeType": "YulAssignment",
															"src": "60:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "75:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "75:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "82:4:1",
																		"nodeType": "YulLiteral",
																		"src": "82:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "71:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "71:3:1"
																},
																"nativeSrc": "71:16:1",
																"nodeType": "YulFunctionCall",
																"src": "71:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "60:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "60:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "32:5:1",
														"nodeType": "YulTypedName",
														"src": "32:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "42:7:1",
														"nodeType": "YulTypedName",
														"src": "42:7:1",
														"type": ""
													}
												],
												"src": "7:86:1"
											},
											{
												"body": {
													"nativeSrc": "160:51:1",
													"nodeType": "YulBlock",
													"src": "160:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "177:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "177:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "198:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "198:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "182:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "182:15:1"
																		},
																		"nativeSrc": "182:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "182:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "170:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "170:6:1"
																},
																"nativeSrc": "170:35:1",
																"nodeType": "YulFunctionCall",
																"src": "170:35:1"
															},
															"nativeSrc": "170:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "170:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "99:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "148:5:1",
														"nodeType": "YulTypedName",
														"src": "148:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "155:3:1",
														"nodeType": "YulTypedName",
														"src": "155:3:1",
														"type": ""
													}
												],
												"src": "99:112:1"
											},
											{
												"body": {
													"nativeSrc": "311:120:1",
													"nodeType": "YulBlock",
													"src": "311:120:1",
													"statements": [
														{
															"nativeSrc": "321:26:1",
															"nodeType": "YulAssignment",
															"src": "321:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "333:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "333:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "344:2:1",
																		"nodeType": "YulLiteral",
																		"src": "344:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "329:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "329:3:1"
																},
																"nativeSrc": "329:18:1",
																"nodeType": "YulFunctionCall",
																"src": "329:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "321:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "321:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "397:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "397:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "410:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "421:1:1",
																				"nodeType": "YulLiteral",
																				"src": "421:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "406:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "406:3:1"
																		},
																		"nativeSrc": "406:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "406:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "357:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "357:39:1"
																},
																"nativeSrc": "357:67:1",
																"nodeType": "YulFunctionCall",
																"src": "357:67:1"
															},
															"nativeSrc": "357:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "357:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "217:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "283:9:1",
														"nodeType": "YulTypedName",
														"src": "283:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "295:6:1",
														"nodeType": "YulTypedName",
														"src": "295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "306:4:1",
														"nodeType": "YulTypedName",
														"src": "306:4:1",
														"type": ""
													}
												],
												"src": "217:214:1"
											},
											{
												"body": {
													"nativeSrc": "477:35:1",
													"nodeType": "YulBlock",
													"src": "477:35:1",
													"statements": [
														{
															"nativeSrc": "487:19:1",
															"nodeType": "YulAssignment",
															"src": "487:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "503:2:1",
																		"nodeType": "YulLiteral",
																		"src": "503:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "497:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "497:5:1"
																},
																"nativeSrc": "497:9:1",
																"nodeType": "YulFunctionCall",
																"src": "497:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "487:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "437:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "470:6:1",
														"nodeType": "YulTypedName",
														"src": "470:6:1",
														"type": ""
													}
												],
												"src": "437:75:1"
											},
											{
												"body": {
													"nativeSrc": "607:28:1",
													"nodeType": "YulBlock",
													"src": "607:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:1:1",
																		"nodeType": "YulLiteral",
																		"src": "624:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "627:1:1",
																		"nodeType": "YulLiteral",
																		"src": "627:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "617:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nativeSrc": "617:12:1",
																"nodeType": "YulFunctionCall",
																"src": "617:12:1"
															},
															"nativeSrc": "617:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "617:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "518:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "518:117:1"
											},
											{
												"body": {
													"nativeSrc": "730:28:1",
													"nodeType": "YulBlock",
													"src": "730:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "747:1:1",
																		"nodeType": "YulLiteral",
																		"src": "747:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "750:1:1",
																		"nodeType": "YulLiteral",
																		"src": "750:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:1"
																},
																"nativeSrc": "740:12:1",
																"nodeType": "YulFunctionCall",
																"src": "740:12:1"
															},
															"nativeSrc": "740:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "740:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "641:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "641:117:1"
											},
											{
												"body": {
													"nativeSrc": "805:77:1",
													"nodeType": "YulBlock",
													"src": "805:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "860:16:1",
																"nodeType": "YulBlock",
																"src": "860:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "869:1:1",
																					"nodeType": "YulLiteral",
																					"src": "869:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "872:1:1",
																					"nodeType": "YulLiteral",
																					"src": "872:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:6:1"
																			},
																			"nativeSrc": "862:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "862:12:1"
																		},
																		"nativeSrc": "862:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "862:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "828:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "828:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "851:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "851:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "835:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "835:15:1"
																				},
																				"nativeSrc": "835:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "835:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "825:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "825:2:1"
																		},
																		"nativeSrc": "825:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "825:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "818:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:1"
																},
																"nativeSrc": "818:41:1",
																"nodeType": "YulFunctionCall",
																"src": "818:41:1"
															},
															"nativeSrc": "815:61:1",
															"nodeType": "YulIf",
															"src": "815:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "764:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "798:5:1",
														"nodeType": "YulTypedName",
														"src": "798:5:1",
														"type": ""
													}
												],
												"src": "764:118:1"
											},
											{
												"body": {
													"nativeSrc": "938:85:1",
													"nodeType": "YulBlock",
													"src": "938:85:1",
													"statements": [
														{
															"nativeSrc": "948:29:1",
															"nodeType": "YulAssignment",
															"src": "948:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "970:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "957:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "957:12:1"
																},
																"nativeSrc": "957:20:1",
																"nodeType": "YulFunctionCall",
																"src": "957:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "948:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "948:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1011:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1011:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "986:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "986:24:1"
																},
																"nativeSrc": "986:31:1",
																"nodeType": "YulFunctionCall",
																"src": "986:31:1"
															},
															"nativeSrc": "986:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "986:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "888:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "916:6:1",
														"nodeType": "YulTypedName",
														"src": "916:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "924:3:1",
														"nodeType": "YulTypedName",
														"src": "924:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "932:5:1",
														"nodeType": "YulTypedName",
														"src": "932:5:1",
														"type": ""
													}
												],
												"src": "888:135:1"
											},
											{
												"body": {
													"nativeSrc": "1093:261:1",
													"nodeType": "YulBlock",
													"src": "1093:261:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1139:83:1",
																"nodeType": "YulBlock",
																"src": "1139:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1141:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1141:77:1"
																			},
																			"nativeSrc": "1141:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1141:79:1"
																		},
																		"nativeSrc": "1141:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1141:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1114:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1114:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1110:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:1"
																		},
																		"nativeSrc": "1110:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1110:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1135:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1135:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1106:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1106:3:1"
																},
																"nativeSrc": "1106:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1106:32:1"
															},
															"nativeSrc": "1103:119:1",
															"nodeType": "YulIf",
															"src": "1103:119:1"
														},
														{
															"nativeSrc": "1232:115:1",
															"nodeType": "YulBlock",
															"src": "1232:115:1",
															"statements": [
																{
																	"nativeSrc": "1247:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1247:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1261:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1261:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1251:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1251:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1276:61:1",
																	"nodeType": "YulAssignment",
																	"src": "1276:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1309:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1309:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1320:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1320:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1305:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1305:3:1"
																				},
																				"nativeSrc": "1305:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1305:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1329:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1329:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "1286:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:18:1"
																		},
																		"nativeSrc": "1286:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1276:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1276:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "1029:325:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1063:9:1",
														"nodeType": "YulTypedName",
														"src": "1063:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1074:7:1",
														"nodeType": "YulTypedName",
														"src": "1074:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1086:6:1",
														"nodeType": "YulTypedName",
														"src": "1086:6:1",
														"type": ""
													}
												],
												"src": "1029:325:1"
											},
											{
												"body": {
													"nativeSrc": "1456:73:1",
													"nodeType": "YulBlock",
													"src": "1456:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1473:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1473:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:19:1"
															},
															"nativeSrc": "1466:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:19:1"
														},
														{
															"nativeSrc": "1494:29:1",
															"nodeType": "YulAssignment",
															"src": "1494:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1513:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1513:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1518:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1518:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1509:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:1"
																},
																"nativeSrc": "1509:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1509:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1494:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1494:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1360:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1428:3:1",
														"nodeType": "YulTypedName",
														"src": "1428:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1433:6:1",
														"nodeType": "YulTypedName",
														"src": "1433:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1444:11:1",
														"nodeType": "YulTypedName",
														"src": "1444:11:1",
														"type": ""
													}
												],
												"src": "1360:169:1"
											},
											{
												"body": {
													"nativeSrc": "1641:69:1",
													"nodeType": "YulBlock",
													"src": "1641:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1663:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1663:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1671:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1671:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1659:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1659:3:1"
																		},
																		"nativeSrc": "1659:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1659:14:1"
																	},
																	{
																		"hexValue": "596f752063616e277420646563726561736520616761696e21",
																		"kind": "string",
																		"nativeSrc": "1675:27:1",
																		"nodeType": "YulLiteral",
																		"src": "1675:27:1",
																		"type": "",
																		"value": "You can't decrease again!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:51:1"
															},
															"nativeSrc": "1652:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007",
												"nativeSrc": "1535:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1633:6:1",
														"nodeType": "YulTypedName",
														"src": "1633:6:1",
														"type": ""
													}
												],
												"src": "1535:175:1"
											},
											{
												"body": {
													"nativeSrc": "1862:220:1",
													"nodeType": "YulBlock",
													"src": "1862:220:1",
													"statements": [
														{
															"nativeSrc": "1872:74:1",
															"nodeType": "YulAssignment",
															"src": "1872:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1938:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1938:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1943:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1943:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1879:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1879:58:1"
																},
																"nativeSrc": "1879:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1879:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2044:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2044:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007",
																	"nativeSrc": "1955:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1955:88:1"
																},
																"nativeSrc": "1955:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1955:93:1"
															},
															"nativeSrc": "1955:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1955:93:1"
														},
														{
															"nativeSrc": "2057:19:1",
															"nodeType": "YulAssignment",
															"src": "2057:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2068:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2073:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2073:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2064:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2064:3:1"
																},
																"nativeSrc": "2064:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2064:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2057:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2057:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1716:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1850:3:1",
														"nodeType": "YulTypedName",
														"src": "1850:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1858:3:1",
														"nodeType": "YulTypedName",
														"src": "1858:3:1",
														"type": ""
													}
												],
												"src": "1716:366:1"
											},
											{
												"body": {
													"nativeSrc": "2259:248:1",
													"nodeType": "YulBlock",
													"src": "2259:248:1",
													"statements": [
														{
															"nativeSrc": "2269:26:1",
															"nodeType": "YulAssignment",
															"src": "2269:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2281:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2281:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2292:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2292:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2277:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2277:3:1"
																},
																"nativeSrc": "2277:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2269:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2316:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2316:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2327:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2327:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2312:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2312:3:1"
																		},
																		"nativeSrc": "2312:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2312:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2335:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2335:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2341:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2331:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2331:3:1"
																		},
																		"nativeSrc": "2331:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2305:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:1"
																},
																"nativeSrc": "2305:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2305:47:1"
															},
															"nativeSrc": "2305:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2305:47:1"
														},
														{
															"nativeSrc": "2361:139:1",
															"nodeType": "YulAssignment",
															"src": "2361:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2495:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2369:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2369:124:1"
																},
																"nativeSrc": "2369:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2369:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2361:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2361:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2088:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2239:9:1",
														"nodeType": "YulTypedName",
														"src": "2239:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2254:4:1",
														"nodeType": "YulTypedName",
														"src": "2254:4:1",
														"type": ""
													}
												],
												"src": "2088:419:1"
											},
											{
												"body": {
													"nativeSrc": "2541:152:1",
													"nodeType": "YulBlock",
													"src": "2541:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2558:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2558:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2561:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2561:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2551:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:1"
																},
																"nativeSrc": "2551:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2551:88:1"
															},
															"nativeSrc": "2551:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2551:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2655:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2655:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2658:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2648:6:1"
																},
																"nativeSrc": "2648:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2648:15:1"
															},
															"nativeSrc": "2648:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2648:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2679:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2679:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2682:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2682:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:1"
																},
																"nativeSrc": "2672:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2672:15:1"
															},
															"nativeSrc": "2672:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2672:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2513:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2513:180:1"
											},
											{
												"body": {
													"nativeSrc": "2740:126:1",
													"nodeType": "YulBlock",
													"src": "2740:126:1",
													"statements": [
														{
															"nativeSrc": "2750:31:1",
															"nodeType": "YulAssignment",
															"src": "2750:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2775:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2775:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2759:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2759:15:1"
																},
																"nativeSrc": "2759:22:1",
																"nodeType": "YulFunctionCall",
																"src": "2759:22:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2750:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2750:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2809:22:1",
																"nodeType": "YulBlock",
																"src": "2809:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2811:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2811:16:1"
																			},
																			"nativeSrc": "2811:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2811:18:1"
																		},
																		"nativeSrc": "2811:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2796:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2796:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2803:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2803:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2793:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2793:2:1"
																},
																"nativeSrc": "2793:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2793:15:1"
															},
															"nativeSrc": "2790:41:1",
															"nodeType": "YulIf",
															"src": "2790:41:1"
														},
														{
															"nativeSrc": "2840:20:1",
															"nodeType": "YulAssignment",
															"src": "2840:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2851:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2851:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2858:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2858:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2847:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2847:3:1"
																},
																"nativeSrc": "2847:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2847:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2840:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2840:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint8",
												"nativeSrc": "2699:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2726:5:1",
														"nodeType": "YulTypedName",
														"src": "2726:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2736:3:1",
														"nodeType": "YulTypedName",
														"src": "2736:3:1",
														"type": ""
													}
												],
												"src": "2699:167:1"
											},
											{
												"body": {
													"nativeSrc": "2913:126:1",
													"nodeType": "YulBlock",
													"src": "2913:126:1",
													"statements": [
														{
															"nativeSrc": "2923:31:1",
															"nodeType": "YulAssignment",
															"src": "2923:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2948:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2948:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2932:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2932:15:1"
																},
																"nativeSrc": "2932:22:1",
																"nodeType": "YulFunctionCall",
																"src": "2932:22:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2923:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2923:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2982:22:1",
																"nodeType": "YulBlock",
																"src": "2982:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2984:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2984:16:1"
																			},
																			"nativeSrc": "2984:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2984:18:1"
																		},
																		"nativeSrc": "2984:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2984:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2976:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2976:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2966:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2966:2:1"
																},
																"nativeSrc": "2966:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2966:15:1"
															},
															"nativeSrc": "2963:41:1",
															"nodeType": "YulIf",
															"src": "2963:41:1"
														},
														{
															"nativeSrc": "3013:20:1",
															"nodeType": "YulAssignment",
															"src": "3013:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3024:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3024:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3031:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3020:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:1"
																},
																"nativeSrc": "3020:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3020:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3013:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "2872:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2899:5:1",
														"nodeType": "YulTypedName",
														"src": "2899:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2909:3:1",
														"nodeType": "YulTypedName",
														"src": "2909:3:1",
														"type": ""
													}
												],
												"src": "2872:167:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't decrease again!\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632baeceb71461004e578063a87d942c14610058578063b389da7614610076578063d09de08a14610092575b5f80fd5b61005661009c565b005b610060610126565b60405161006d91906101a9565b60405180910390f35b610090600480360381019061008b91906101f0565b61013a565b005b61009a610156565b005b5f805f9054906101000a900460ff1660ff16116100ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e590610275565b60405180910390fd5b5f8081819054906101000a900460ff168092919061010b906102c0565b91906101000a81548160ff021916908360ff16021790555050565b5f805f9054906101000a900460ff16905090565b805f806101000a81548160ff021916908360ff16021790555050565b5f8081819054906101000a900460ff1680929190610173906102e7565b91906101000a81548160ff021916908360ff16021790555050565b5f60ff82169050919050565b6101a38161018e565b82525050565b5f6020820190506101bc5f83018461019a565b92915050565b5f80fd5b6101cf8161018e565b81146101d9575f80fd5b50565b5f813590506101ea816101c6565b92915050565b5f60208284031215610205576102046101c2565b5b5f610212848285016101dc565b91505092915050565b5f82825260208201905092915050565b7f596f752063616e277420646563726561736520616761696e21000000000000005f82015250565b5f61025f60198361021b565b915061026a8261022b565b602082019050919050565b5f6020820190508181035f83015261028c81610253565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102ca8261018e565b91505f82036102dc576102db610293565b5b600182039050919050565b5f6102f18261018e565b915060ff820361030457610303610293565b5b60018201905091905056fea2646970667358221220fbaa80ec5f6de652b958a82be366ca088f786b3964f0567c54391bb81b75225764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xB389DA76 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x92 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x156 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND GT PUSH2 0xEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5 SWAP1 PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10B SWAP1 PUSH2 0x2C0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x173 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x18E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BC PUSH0 DUP4 ADD DUP5 PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1CF DUP2 PUSH2 0x18E JUMP JUMPDEST DUP2 EQ PUSH2 0x1D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA DUP2 PUSH2 0x1C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x205 JUMPI PUSH2 0x204 PUSH2 0x1C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x212 DUP5 DUP3 DUP6 ADD PUSH2 0x1DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E277420646563726561736520616761696E2100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F PUSH1 0x19 DUP4 PUSH2 0x21B JUMP JUMPDEST SWAP2 POP PUSH2 0x26A DUP3 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28C DUP2 PUSH2 0x253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CA DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x293 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x304 JUMPI PUSH2 0x303 PUSH2 0x293 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xAA DUP1 0xEC PUSH0 PUSH14 0xE652B958A82BE366CA088F786B39 PUSH5 0xF0567C5439 SHL 0xB8 SHL PUSH22 0x225764736F6C63430008180033000000000000000000 ",
							"sourceMap": "274:1011:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:109;;;:::i;:::-;;561:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1213:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;754:52;;;:::i;:::-;;922:109;976:1;968:5;;;;;;;;;;;:9;;;960:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1017:5;;:7;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;922:109::o;561:77::-;602:5;626;;;;;;;;;;;619:12;;561:77;:::o;1213:70::-;1270:6;1262:5;;:14;;;;;;;;;;;;;;;;;;1213:70;:::o;754:52::-;792:5;;:7;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;754:52::o;7:86:1:-;42:7;82:4;75:5;71:16;60:27;;7:86;;;:::o;99:112::-;182:22;198:5;182:22;:::i;:::-;177:3;170:35;99:112;;:::o;217:214::-;306:4;344:2;333:9;329:18;321:26;;357:67;421:1;410:9;406:17;397:6;357:67;:::i;:::-;217:214;;;;:::o;518:117::-;627:1;624;617:12;764:118;835:22;851:5;835:22;:::i;:::-;828:5;825:33;815:61;;872:1;869;862:12;815:61;764:118;:::o;888:135::-;932:5;970:6;957:20;948:29;;986:31;1011:5;986:31;:::i;:::-;888:135;;;;:::o;1029:325::-;1086:6;1135:2;1123:9;1114:7;1110:23;1106:32;1103:119;;;1141:79;;:::i;:::-;1103:119;1261:1;1286:51;1329:7;1320:6;1309:9;1305:22;1286:51;:::i;:::-;1276:61;;1232:115;1029:325;;;;:::o;1360:169::-;1444:11;1478:6;1473:3;1466:19;1518:4;1513:3;1509:14;1494:29;;1360:169;;;;:::o;1535:175::-;1675:27;1671:1;1663:6;1659:14;1652:51;1535:175;:::o;1716:366::-;1858:3;1879:67;1943:2;1938:3;1879:67;:::i;:::-;1872:74;;1955:93;2044:3;1955:93;:::i;:::-;2073:2;2068:3;2064:12;2057:19;;1716:366;;;:::o;2088:419::-;2254:4;2292:2;2281:9;2277:18;2269:26;;2341:9;2335:4;2331:20;2327:1;2316:9;2312:17;2305:47;2369:131;2495:4;2369:131;:::i;:::-;2361:139;;2088:419;;;:::o;2513:180::-;2561:77;2558:1;2551:88;2658:4;2655:1;2648:15;2682:4;2679:1;2672:15;2699:167;2736:3;2759:22;2775:5;2759:22;:::i;:::-;2750:31;;2803:4;2796:5;2793:15;2790:41;;2811:18;;:::i;:::-;2790:41;2858:1;2851:5;2847:13;2840:20;;2699:167;;;:::o;2872:::-;2909:3;2932:22;2948:5;2932:22;:::i;:::-;2923:31;;2976:4;2969:5;2966:15;2963:41;;2984:18;;:::i;:::-;2963:41;3031:1;3024:5;3020:13;3013:20;;2872:167;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "167400",
								"executionCost": "24477",
								"totalCost": "191877"
							},
							"external": {
								"decrement()": "28835",
								"getCount()": "2473",
								"increment()": "26739",
								"setCount(uint8)": "24695"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 359,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 337,
									"end": 360,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 337,
									"end": 360,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 337,
									"end": 360,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 337,
									"end": 360,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 1285,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbaa80ec5f6de652b958a82be366ca088f786b3964f0567c54391bb81b75225764736f6c63430008180033",
									".code": [
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "2BAECEB7"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "A87D942C"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "B389DA76"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "D09DE08A"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 1285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 922,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 561,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 561,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1213,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1213,
											"end": 1283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 754,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 754,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 754,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 754,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 806,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 968,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 968,
											"end": 977,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 960,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1017,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 1031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 561,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 631,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 626,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 619,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 754,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 792,
											"end": 799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 93,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 93,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 42,
											"end": 49,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 86,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 75,
											"end": 80,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 71,
											"end": 87,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 60,
											"end": 87,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 60,
											"end": 87,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 99,
											"end": 211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 198,
											"end": 203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 182,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 182,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 182,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 170,
											"end": 205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 217,
											"end": 431,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 217,
											"end": 431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 329,
											"end": 347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 406,
											"end": 423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 357,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 357,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 357,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 217,
											"end": 431,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 217,
											"end": 431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 217,
											"end": 431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 217,
											"end": 431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 217,
											"end": 431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 518,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 518,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 627,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 629,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 764,
											"end": 882,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 764,
											"end": 882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 835,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 835,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 825,
											"end": 858,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 815,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 815,
											"end": 876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 872,
											"end": 873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 874,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 815,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 815,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 764,
											"end": 882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 888,
											"end": 1023,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 888,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 957,
											"end": 977,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 948,
											"end": 977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 948,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 986,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 888,
											"end": 1023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 888,
											"end": 1023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 888,
											"end": 1023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 888,
											"end": 1023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 888,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1029,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1138,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1141,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1141,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1103,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1329,
											"end": 1336,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1286,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1337,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1286,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1354,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1529,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1360,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1529,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1535,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "596F752063616E277420646563726561736520616761696E2100000000000000"
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2082,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1716,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1943,
											"end": 1945,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1938,
											"end": 1941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1879,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1879,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2044,
											"end": 2047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1955,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1955,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2507,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2088,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2369,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2500,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2369,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2693,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2558,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2686,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2687,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2866,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2699,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2775,
											"end": 2780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2759,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2759,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2790,
											"end": 2831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2831,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2790,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2851,
											"end": 2856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2860,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2872,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2932,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2932,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2963,
											"end": 3004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3004,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2963,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3024,
											"end": 3029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 3039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Counter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"decrement()": "2baeceb7",
							"getCount()": "a87d942c",
							"increment()": "d09de08a",
							"setCount(uint8)": "b389da76"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_count\",\"type\":\"uint8\"}],\"name\":\"setCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a basic example of a counter with increment and decrement functionality.\",\"kind\":\"dev\",\"methods\":{\"decrement()\":{\"details\":\"This function decreases the count state variable by 1.\"},\"getCount()\":{\"details\":\"The function is marked as view, meaning it does not modify the state.\",\"returns\":{\"_0\":\"The current count as an unsigned 8-bit integer\"}},\"increment()\":{\"details\":\"This function increases the count state variable by 1.\"},\"setCount(uint8)\":{\"details\":\"The input parameter _count allows setting the count directly.\",\"params\":{\"_count\":\"The new value for the count\"}}},\"title\":\"A simple counter contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decrement()\":{\"notice\":\"Decrements the count by 1\"},\"getCount()\":{\"notice\":\"Returns the current count value\"},\"increment()\":{\"notice\":\"Increments the count by 1\"},\"setCount(uint8)\":{\"notice\":\"Sets the count to a specific value\"}},\"notice\":\"This contract allows incrementing, decrementing, and setting a counter value.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counter.sol\":\"Counter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Counter.sol\":{\"keccak256\":\"0x21916d33ecab7cab00dbbb9d064d384d974a5a1c4904fd4698183f6199f49063\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fd57086ee6405118281942c982f72e95ab2cdce53ac42afdf1650f42363461\",\"dweb:/ipfs/QmWZaaxj7KEkCHmxYC1n2LyACUWF46Pfmtmrud9fb91nHu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/Counter.sol:Counter",
								"label": "count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"decrement()": {
								"notice": "Decrements the count by 1"
							},
							"getCount()": {
								"notice": "Returns the current count value"
							},
							"increment()": {
								"notice": "Increments the count by 1"
							},
							"setCount(uint8)": {
								"notice": "Sets the count to a specific value"
							}
						},
						"notice": "This contract allows incrementing, decrementing, and setting a counter value.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Counter.sol": {
				"ast": {
					"absolutePath": "contracts/Counter.sol",
					"exportedSymbols": {
						"Counter": [
							50
						]
					},
					"id": 51,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counter",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:217:0",
								"text": "@title A simple counter contract\n @notice This contract allows incrementing, decrementing, and setting a counter value.\n @dev This is a basic example of a counter with increment and decrement functionality."
							},
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50
							],
							"name": "Counter",
							"nameLocation": "283:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "297:35:0",
										"text": "@notice The current count value"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "351:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 50,
									"src": "337:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 4,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "337:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "359:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "609:29:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "626:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 11,
												"id": 13,
												"nodeType": "Return",
												"src": "619:12:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "367:189:0",
										"text": "@notice Returns the current count value\n @dev The function is marked as view, meaning it does not modify the state.\n @return The current count as an unsigned 8-bit integer"
									},
									"functionSelector": "a87d942c",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCount",
									"nameLocation": "570:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "602:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 9,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "602:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:7:0"
									},
									"scope": 50,
									"src": "561:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "782:24:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "792:7:0",
													"subExpression": {
														"id": 19,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "792:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "792:7:0"
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "644:105:0",
										"text": "@notice Increments the count by 1\n @dev This function increases the count state variable by 1."
									},
									"functionSelector": "d09de08a",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "763:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:0:0"
									},
									"scope": 50,
									"src": "754:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "950:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 28,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "968:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "976:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "968:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e277420646563726561736520616761696e21",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "979:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007",
																"typeString": "literal_string \"You can't decrease again!\""
															},
															"value": "You can't decrease again!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a8710298696e8bee2cc23d286531e17dd05ae51edf2143dcf119ef36980a007",
																"typeString": "literal_string \"You can't decrease again!\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "960:47:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "1017:7:0",
													"subExpression": {
														"id": 34,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1017:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "1017:7:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "812:105:0",
										"text": "@notice Decrements the count by 1\n @dev This function decreases the count state variable by 1."
									},
									"functionSelector": "2baeceb7",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "950:0:0"
									},
									"scope": 50,
									"src": "922:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1252:31:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 44,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1262:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 45,
														"name": "_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1270:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1262:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1262:14:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1037:171:0",
										"text": "@notice Sets the count to a specific value\n @param _count The new value for the count\n @dev The input parameter _count allows setting the count directly."
									},
									"functionSelector": "b389da76",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCount",
									"nameLocation": "1222:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "_count",
												"nameLocation": "1237:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1231:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 40,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1231:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:14:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:0:0"
									},
									"scope": 50,
									"src": "1213:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 51,
							"src": "274:1011:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1254:0"
				},
				"id": 0
			}
		}
	}
}